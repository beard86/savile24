'use strict';

var _interopRequireWildcard = require('babel-runtime/helpers/interop-require-wildcard')['default'];

exports.__esModule = true;

/**
 * Return a transform stream recursing through directory to yield
 * Sass/SCSS files instead.
 *
 * @return {Object}
 */
exports['default'] = recurse;

var _is = require('./utils');

var _path = require('path');

var _path2 = _interopRequireWildcard(_path);

var _through = require('through2');

var _through2 = _interopRequireWildcard(_through);

var _vfs = require('vinyl-fs');

var _vfs2 = _interopRequireWildcard(_vfs);

function recurse() {
  return _through2['default'].obj(function (file, enc, cb) {
    var _this = this;

    if (!_is.is.vinylFile(file)) {
      // Don't know how to handle this object.
      return cb(new Error('Unsupported stream object. Vinyl file expected.'));
    }

    if (file.isBuffer() || file.isStream()) {
      // Pass-through.
      return cb(null, file);
    }

    if (!file.isDirectory()) {
      // At that stage we want only dirs. Dismiss file.isNull.
      return cb();
    }

    // It's a directory, find inner Sass/SCSS files.
    var pattern = _path2['default'].resolve(file.path, '**/*.+(sass|scss)');

    _vfs2['default'].src(pattern).pipe(_through2['default'].obj(function (file, enc, cb) {
      // Append to "parent" stream.
      _this.push(file);
      cb();
    }, function () {
      // All done.
      cb();
    }));
  });
}

module.exports = exports['default'];